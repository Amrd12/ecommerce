<!-- Shared Layout: navbar + footer + animations + Tailwind utilities -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>My Store</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    color1= '#438cc3';
    color2= '#a297de';
    color3= '#8569cf';
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            navbar: color2,
            footer: color2,
            drawerHeader: color2
          },
          transitionProperty: {
            'width': 'width'
          }
        }
      }
    }
  </script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
  
  <style>
    :root {
      --color1: #438cc3; /* Primary */
      --color2: #a297de; /* Secondary */
      --color3: #8569cf; /* Accent */
    }

    body {
      background-color: var(--color2); /* Secondary color for the background */
      color: #ffff; /* Primary color for text */
    }

    .bg-navbar {
      background-color: var(--color1); /* Primary color for navbar */
    }

    .bg-footer {
      background-color: var(--color1); /* Primary color for footer */
    }

    .bg-drawerHeader {
      background-color: var(--color2);
      color: #ffff; /* Secondary color for drawer header */
    }

    .category-scroll {
      display: flex;
      gap: 1rem;
      overflow-x: auto; /* Enable horizontal scrolling */
      scroll-behavior: smooth; /* Smooth scrolling */
      padding-bottom: 1rem; /* Add some padding for better spacing */
    }
.category-scroll::-webkit-scrollbar {
      display: none; /* Hide the scrollbar */
    }



  .text-blue-600 {
    color: var(--color3) !important;
  }

  .hover\:bg-blue-700:hover {
    background-color: var(--color3) !important;
  }

  .bg-blue-600 {
    background-color: var(--color1) !important;
  }

  .hover\:bg-blue-700 {
    background-color: var(--color2) !important;
  }
  .hover\:bg-blue-700:hover {
    background-color: var(--color3) !important;
    color: #fff !important;
  }

  .bg-red-600 {
    background-color: #e63946 !important;
  }

  .hover\:bg-red-700:hover {
    background-color: #d62828 !important;
  }

  .bullet.active {
    background-color: var(--color3); 
  }

  .bullet {
    background-color: #ffffff; /* Default bullet color */
  }

  .hover\:underline:hover {
    color: var(--color3);
    text-decoration: underline;
  }

  input[type="text"] {
    border: 1px solid var(--color3);
  }

  .rounded {
    border-radius: 0.5rem;
  }

  .hover\:scale-105:hover {
    background-color: var(--color3);
  }

  .group-hover\:inline {
    color: #ffff;
  }

  .shadow-lg {
    box-shadow: 0 10px 15px -3px rgba(67, 140, 195, 0.4), 0 4px 6px -2px rgba(67, 140, 195, 0.3);
  }

  .hover\:shadow-xl:hover {
    box-shadow: 0 15px 25px -5px rgba(133, 105, 207, 0.5), 0 5px 10px -4px rgba(133, 105, 207, 0.4);
  }
</style>
  <style>
    #heroSlider {
      height: 400px;
      position: relative;
      border-radius: 1rem;    }

    .slides {
      display: flex;
      transition: transform 0.5s ease-in-out;
      
    }

    .slide {
      min-width: 100%;
      height: 100%;
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
    }

    .bullet {
      cursor: pointer;
      transition: opacity 0.3s ease;
    }

    .bullet.active {
      opacity: 1;
      background-color:var(--color2) ; /* Highlight active bullet */
    }
  </style>
  <style>
    .group:hover .group-hover\:block {
      display: block;
    }
  </style>
</head>
<body class="bg-gray-50 text-gray-900">

<!-- Navbar -->
<nav class="bg-navbar text-white py-4 shadow sticky top-0 z-50">
  <div class="container mx-auto px-4 flex justify-between items-center">
    <a href="/" class="text-xl font-bold">YourStore</a>

    <!-- Search -->
    <div class="flex-grow mx-4 relative flex justify-end">
      <input type="text" placeholder="Search..." onfocus="this.classList.add('w-full')"
             onblur="this.classList.remove('w-full')"
             class="w-32 focus:w-full transition-all duration-500 bg-white text-black px-3 py-1 rounded" />
    </div>

    <div class="flex items-center gap-4">
      <button onclick="toggleCart()" class="group flex items-center gap-1">
        <i class="bi bi-cart text-xl"></i>
        <span class="hidden group-hover:inline transition">Cart</span>
      </button>
      <div class="relative">
        <% if (user) { %>
          <!-- Logged-in User -->
          <img src="<%= user.profileImage || '/images/default-avatar.png' %>" alt="Profile" 
               class="w-10 h-10 rounded-full cursor-pointer" onclick="toggleDropdown('userDropdown')">
          <div id="userDropdown" class="absolute right-0 mt-2 w-48 bg-white shadow-lg rounded-lg hidden">
            <a href="/profile" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Profile</a>
            <a href="/logout" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Log Out</a>
          </div>
        <% } else { %>
          <!-- Not Logged In -->
          <i class="bi bi-person text-xl cursor-pointer" onclick="toggleDropdown('loginDropdown')"></i>
          <div id="loginDropdown" class="absolute right-0 mt-2 w-48 bg-white shadow-lg rounded-lg hidden">
            <a href="/login" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Log In</a>
            <a href="/register" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Sign Up</a>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</nav>

<!-- Hero Section -->
<section class="relative bg-cover bg-center py-16">
  <div id="heroSlider" class="relative overflow-hidden container mx-auto px-4">
    <!-- Slides -->
    <div class="slides">
      <a href="/sales/event1" class="slide">
        <img src="/images/sales-event1.jpg" alt="Sales Event 1" class="w-full h-full object-cover rounded-xl">
      </a>
      <a href="/sales/event2" class="slide">
        <img src="/images/sales-event2.jpg" alt="Sales Event 2" class="w-full h-full object-cover">
      </a>
      <a href="/sales/event3" class="slide">
        <img src="/images/sales-event3.jpg" alt="Sales Event 1" class="w-full h-full object-cover rounded-xl">
      </a>
    </div>

    <!-- Bullets -->
    <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
      <button class="bullet w-3 h-3 bg-white rounded-full opacity-50 hover:opacity-100" data-slide="0"></button>
      <button class="bullet w-3 h-3 bg-white rounded-full opacity-50 hover:opacity-100" data-slide="1"></button>
      <button class="bullet w-3 h-3 bg-white rounded-full opacity-50 hover:opacity-100" data-slide="2"></button>
    </div>
  </div>
</section>

<!-- Main Products Section -->
<main class="container mx-auto px-4 py-8">
  <% categories.forEach(category => { %>
    <section class="mb-10">
      <!-- Category Header -->
      <div class="flex justify-between items-center mb-4 bg-navbar text-white px-4 py-2 rounded">
        <h2 class="text-2xl font-semibold"><%= category.name %></h2>
        <button onclick="window.location.href='/category/<%= category.id %>'" 
                class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition">
          View All
        </button>
      </div>
      <!-- Products -->
      <div class="category-scroll">
        <% category.products.forEach(p => { %>
          <div class="min-w-[250px] bg-white rounded-lg shadow-md hover:shadow-xl hover:scale-105 transform transition overflow-hidden">
            <img src="<%= p.image || '/images/default.jpg' %>" class="w-full h-[200px] object-cover" alt="<%= p.name %>" />
            <div class="p-3">
              <h3 class="font-semibold text-lg"><%= p.name %></h3>
              <p class="text-blue-600 font-medium">$<%= p.price.toFixed(2) %></p>
              <button onclick="addToCart('<%= p.id %>', '<%= p.name %>', <%= p.price %>, '<%= p.image %>')" 
                      class="mt-2 w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700">Add to Cart</button>
            </div>
          </div>
        <% }) %>
      </div>
      <hr class="my-6 border-gray-300" /> <!-- Horizontal line between categories -->
    </section>
  <% }) %>
</main>

<!-- Drawer Cart -->
<div id="cartDrawer" class="fixed top-0 right-0 w-80 h-full bg-white shadow-lg transform translate-x-full transition-transform duration-300 z-50 overflow-y-auto">
  <div class="p-4 bg-drawerHeader text-center font-bold text-lg">Cart</div>
  <ul id="cart-items" class="p-4 space-y-3"></ul>
  <div class="p-4">
    <p class="text-lg font-semibold mb-4">Total: $<span id="cart-total">0.00</span></p>
    <button onclick="processCart()" class="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 mb-2">Checkout</button>
    <button onclick="clearCart()" class="w-full bg-red-600 text-white py-2 rounded hover:bg-red-700">Clear Cart</button>
  </div>
</div>

<!-- Footer -->
<footer class="bg-footer text-center py-4 mt-8 text-gray-700">
  <div class="container mx-auto">
    <p>&copy; <%= new Date().getFullYear() %> YourStore</p>
    <div class="flex justify-center gap-4 mt-2">
      <a href="/about" class="hover:underline">About Us</a>
      <a href="/contact" class="hover:underline">Contact Us</a>
      <a href="/privacy" class="hover:underline">Privacy Policy</a>
    </div>
  </div>
</footer>

<script>
  let cart = JSON.parse(sessionStorage.getItem("cart")) || [];
  let isDrawerOpen = false;

  function toggleCart() {
    const cartDrawer = document.getElementById("cartDrawer");
    cartDrawer.classList.toggle("translate-x-full");
    isDrawerOpen = !isDrawerOpen;

    if (isDrawerOpen) {
      // Add event listener to detect clicks outside the drawer
      document.addEventListener("click", handleOutsideClick);
    } else {
      // Remove the event listener when the drawer is closed
      document.removeEventListener("click", handleOutsideClick);
    }
  }

  function handleOutsideClick(event) {
    const cartDrawer = document.getElementById("cartDrawer");
    if (!cartDrawer.contains(event.target) && !event.target.closest("[onclick='toggleCart()']")) {
      cartDrawer.classList.add("translate-x-full");
      isDrawerOpen = false;
      document.removeEventListener("click", handleOutsideClick);
    }
  }

  // Prevent clicks inside the drawer from closing it
  document.getElementById("cartDrawer").addEventListener("click", (event) => {
    event.stopPropagation();
  });

  function addToCart(id, name, price, image) {
    cart.push({ id, name, price, image });
    sessionStorage.setItem("cart", JSON.stringify(cart));
    updateCart();
  }

  function removeFromCart(index) {
    cart.splice(index, 1);
    sessionStorage.setItem("cart", JSON.stringify(cart));
    updateCart();
  }

  function clearCart() {
    cart = [];
    sessionStorage.setItem("cart", JSON.stringify(cart));
    updateCart();
  }

  function updateCart() {
    const container = document.getElementById("cart-items");
    const totalEl = document.getElementById("cart-total");
    container.innerHTML = '';
    let total = 0;
    cart.forEach((item, index) => {
      const li = document.createElement("li");
      li.className = "flex items-center gap-3 justify-between border-b pb-2";
      li.innerHTML = `
        <div class="flex items-center gap-2">
          <img src="${item.image || '/images/default.jpg'}" class="w-8 h-8 object-cover rounded" />
          <div>
            <p class="font-semibold">${item.name}</p>
            <small class="text-gray-600">$${item.price.toFixed(2)}</small>
          </div>
        </div>
        <button class="text-red-500" onclick="removeFromCart(${index})">&times;</button>
      `;
      container.appendChild(li);
      total += item.price;
    });
    totalEl.textContent = total.toFixed(2);
  }

  function processCart() {
    window.location.href = "/checkout";
  }

  updateCart();

  // Enable horizontal scrolling with the mouse wheel
  document.querySelectorAll('.category-scroll').forEach((scrollContainer) => {
    scrollContainer.addEventListener('wheel', (event) => {
      event.preventDefault(); // Prevent vertical scrolling
      scrollContainer.scrollLeft += event.deltaY * 3; // Increase scroll speed by multiplying deltaY
    });
  });

  const slides = document.querySelectorAll('.slide');
  const bullets = document.querySelectorAll('.bullet');
  let currentSlide = 0;

  function showSlide(index) {
    const slider = document.querySelector('.slides');
    slider.style.transform = `translateX(-${index * 100}%)`;

    // Update active bullet
    bullets.forEach((bullet, i) => {
      bullet.classList.toggle('active', i === index);
    });

    currentSlide = index;
  }

  // Auto-slide every 5 seconds
  setInterval(() => {
    const nextSlide = (currentSlide + 1) % slides.length;
    showSlide(nextSlide);
  }, 5000);

  // Add click event to bullets
  bullets.forEach((bullet, index) => {
    bullet.addEventListener('click', () => showSlide(index));
  });

  // Initialize the first slide
  showSlide(0);

  function toggleDropdown(dropdownId) {
    const dropdown = document.getElementById(dropdownId);
    const isVisible = !dropdown.classList.contains('hidden');

    // Hide all dropdowns
    document.querySelectorAll('.absolute').forEach((menu) => {
      menu.classList.add('hidden');
    });

    // Toggle the clicked dropdown
    if (!isVisible) {
      dropdown.classList.remove('hidden');
    }
  }

  // Close dropdown when clicking outside
  document.addEventListener('click', (event) => {
    const dropdowns = document.querySelectorAll('.absolute');
    dropdowns.forEach((dropdown) => {
      if (!dropdown.contains(event.target) && !event.target.closest('.cursor-pointer')) {
        dropdown.classList.add('hidden');
      }
    });
  });
</script>

<!-- Include Shared Scripts -->
<%- include('../partials/scripts') %>
</body>
</html>

